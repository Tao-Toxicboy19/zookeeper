# version: '4'

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     ports:
#       - '2181:2181'
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#     restart: always

#   kafka:
#     image: wurstmeister/kafka:latest
#     environment:
#       - KAFKA_BROKER_ID=1
#       - KAFKA_LISTENERS=PLAINTEXT://:9092
#       # dev
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#       # production
#       # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#     depends_on:
#       - zookeeper
#     ports:
#       - '9092:9092'
#     restart: always

#   mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     ports:
#       - '27017:27017'
#     volumes:
#       - mongo_data:/data/db

#   rabbitmq:
#     image: rabbitmq:management-alpine
#     environment:
#       RABBITMQ_DEFAULT_USER: mikelopster
#       RABBITMQ_DEFAULT_PASS: password
#     ports:
#       - '15672:15672'
#       - '5672:5672'
#     restart: always

#   redis:
#     image: redis:latest
#     ports:
#       - '6378:6379'
#     restart: always

#   postgres:
#     image: postgres:latest
#     container_name: postgres
#     environment:
#       POSTGRES_DB: mydatabase
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - '4040:5432'
#     restart: always

#   predict-service:
#     image: lindermand/predict-service:0.5
#     command: predict-service
#     environment:
#       MONGO_URL: mongodb://root:example@mongo:27017/zookeeper?authSource=admin
#       HOST_REDIS: localhost
#       PORT_REDIS: 6378
#       PORT: 50051
#       API_KEY: ZIIJYaRgR9WyJaKxq7zVehOtkfomjyX29NwNLWLlBgE3ikw5jtkMxVQD0IgewUxQ
#       SECRET_KEY: 7JmVNUuzOSyjzDnzGsewBIszScuj47sf1w7MRNDUaRj8pE49gAX4fsgP9RlDCi6S
#     depends_on:
#       - mongo
#       - postgres
#       - redis
#     ports:
#       - 50055:50051
#     restart: always

# volumes:
#   postgres_data:
#   mongo_data:

version: '3.9'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    ports:
    - '6379:6379'
    restart: always

  predict-service:
    image: lindermand/predict-service:0.6
    # build:
    #   context: .
    #   dockerfile: ./Dockerfile
    command: python main.py
    environment:
      MONGO_URL: mongodb://root:example@mongo:27017/zookeeper?authSource=admin
      HOST_REDIS: redis
      PORT_REDIS: 6379
      PORT: 50051
      API_KEY: ZIIJYaRgR9WyJaKxq7zVehOtkfomjyX29NwNLWLlBgE3ikw5jtkMxVQD0IgewUxQ
      SECRET_KEY: 7JmVNUuzOSyjzDnzGsewBIszScuj47sf1w7MRNDUaRj8pE49gAX4fsgP9RlDCi6S
    depends_on:
      - mongo
      - redis
    ports:
      - "50055:50051"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
    - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      # dev
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      # production
      # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    restart: always

  rabbitmq:
    image: rabbitmq:management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: mikelopster
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - '15672:15672'
      - '5672:5672'
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '4040:5432'
    restart: always

volumes:
  mongo_data:
    driver: local
  postgres_data:
